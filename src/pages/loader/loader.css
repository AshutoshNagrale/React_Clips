:root {
  --loader-text-color: #f6e9fe;
  --loader-dot-color: #a51ff6;
  --loader-bg: #191819;
  --def-transition-duration: 0.3s;
}

html.lenis {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-scrolling iframe {
  pointer-events: none;
}


html {
  font-size: 16px;
  font-family: "Open Sans", sans-serif;
  line-height: 1.5;
}

#page-content {
  background-color: white;
  padding: 5rem 7.5rem;
  color: #151618;
}

h2,
h3,
.price {
  font-family: "Playfair Display", serif;
  margin: 0;
}

h2 {
  color: #151618;
  font-size: 4rem;
  font-weight: 700;
  line-height: 120%; /* 3.675rem */
  margin: 2rem 0;
}

h3 {
  font-size: 2.1875rem;
  font-weight: 400;
  line-height: 120%; /* 2.625rem */
}

.price {
  font-variant-numeric: lining-nums proportional-nums;
  line-height: 120%; /* 1.875rem */
  font-size: 1.5625rem;
}

header p {
  font-size: 1.25rem;
}

p.small {
  color: #e54949;
  font-size: 0.8125rem;
  font-weight: 700;
  text-transform: uppercase;
}

figure,
figure p.small {
  color: #ffffff;
}

figure h3 + p {
  font-size: 1rem;
}

figure footer p.small {
  font-weight: 400;
  margin-bottom: 0;
}

img {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;
}

header {
  margin-bottom: 7.5rem;
  max-width: 75%;
}

.gallery {
  display: grid;
  list-style-type: none;
  padding: 0;
  margin: 0;
  grid-gap: 2rem;
  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));
  grid-auto-rows: 40rem;
  grid-auto-flow: dense;
}

figure {
  margin: 0;
  width: 100%;
  height: 100%;
  position: relative;
}

figcaption {
  position: absolute;
  inset: 0;
  pointer-events: none;
  padding: 4rem 2.5rem;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  gap: 2rem;
}

figcaption main {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  gap: 2rem;
}

figure p {
  margin: 0;
}

figure footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

figure footer img {
  width: auto;
}

figure main,
figure footer {
  opacity: 0;
}

figure:hover main,
figure:hover footer {
  opacity: 1;
}

figcaption {
  z-index: 1;
}

figcaption::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(180deg, rgba(21, 22, 24, 0.24) 0%, #151618 100%);
  z-index: -1;
  opacity: 0;
  transition-property: opacity;
}

figure:hover figcaption::before {
  opacity: 1;
}

figure a img {
  transform: scale(1.2);
  transition-property: transform;
}

figure:hover a img {
  transform: scale(1);
}

figure {
  overflow: hidden;
}

figure main {
  transform: translate3d(0, -6rem, 0);
  transition-property: opacity, transform;
}

figure footer {
  transform: translate3d(0, 6rem, 0);
  transition-property: opacity, transform;
}

figure footer img {
  transform: translate3d(-3rem, 0, 0);
  transition-delay: var(--def-transition-duration);
  opacity: 0;
}

figure:hover main,
figure:hover footer {
  transform: translate3d(0, 0, 0);
}

figure:hover footer img {
  transform: translate3d(0, 0, 0);
  opacity: 1;
}

figcaption::before,
figure img,
figure main,
figure footer {
  transition-duration: var(--def-transition-duration);
  transition-timing-function: ease-in-out;
}

/* Loader class */
.loader-container {
  position: fixed;
  inset: 0;
  z-index: 999;
  background-color: var(--loader-bg);
  display: grid;
  place-content: center;
  transition: opacity 0.5s 0.1s ease-in-out, visibility 0.5s ease-in-out;
}

/* loading login */
.loader-container.hidden {
  opacity: 0;
  visibility: hidden;
}

#page-content {
  opacity: 0;
  transform: translate3d(0, -1rem, 0);
  transition: opacity 0.6s ease-in-out, transform 0.6s ease-in-out;
}

#page-content.visible {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}
svg {
  width: 50rem;
  font-weight: 500;
}

svg text {
  font-size: 5rem;
  stroke-width: 2;
  letter-spacing: 1px;
}

svg text.text-body {
  stroke: var(--loader-text-color);
  animation: 4s infinite alternate animate-stroke;
}

svg text.dot {
  fill: var(--loader-dot-color);
  stroke: var(--loader-dot-color);
  animation: 4s infinite alternate animate-dot;
}

@keyframes animate-stroke {
  0% {
    fill: transparent;
    stroke: var(--loader-text-color);
    stroke-width: 3;
    stroke-dashoffset: 25%;
    stroke-dasharray: 0 32%;
  }

  50% {
    fill: transparent;
    stroke: var(--loader-text-color);
    stroke-width: 3;
  }

  80%,
  100% {
    fill: var(--loader-text-color);
    stroke: transparent;
    stroke-width: 0;
    stroke-dashoffset: -25%;
    stroke-dasharray: 32% 0;
  }
}

@keyframes animate-dot {
  0%,
  60% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
